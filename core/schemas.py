from typing import List, Optional, Dict, Any
from typing import Union
from uuid import UUID
from datetime import datetime, timezone
from pydantic import BaseModel, Field, validator


class DispatchedObservation(BaseModel):
    gundi_id: Union[UUID, str] = Field(
        None,
        title="Gundi ID",
        description="A unique object ID generated by gundi.",
    )
    related_to: Optional[Union[UUID, str]] = Field(
        None,
        title="Related Object - Gundi ID",
        description="The Gundi ID of the related object",
    )
    external_id: Optional[Union[UUID, str]] = Field(
        None,
        example="901870234",
        description="The ID provided by the external system after sending the observation",
    )
    data_provider_id: Optional[Union[UUID, str]] = Field(
        None,
        title="Provider ID",
        description="The unique ID of the Integration providing the data.",
    )
    destination_id: Optional[Union[UUID, str]] = Field(
        None,
        title="Destination ID",
        description="The unique ID of the Integration with the destination system.",
    )
    delivered_at: Optional[datetime] = Field(
        ...,
        title="ISO Timestamp",
        description="The date and time when the observation was sent to the destination system.",
        example="2023-06-23T12:01:02-0700",
    )
